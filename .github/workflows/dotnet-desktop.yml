name: UrlShortener Build, Test, Collect Coverage

on:
  push:
    branches: [ "main" ]

env:
  # Global Environment Variables
  Solution_Path: backend/UrlShortener.sln
  Architecture_Tests_Project_Path: backend/tests/UrlShortener.ArchitectureTests
  Unit_Tests_Project_Path: backend/tests/UrlShortener.UnitTests

jobs:
  # Job 1: Install dependencies
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build the solution
      run: dotnet build ${{ env.Solution_Path }} --no-incremental --no-restore

# Job 2: Run Architecture Tests
  architecture_tests:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Run Architecture Tests
      run: dotnet test ${{ env.Architecture_Tests_Project_Path }} --no-restore
      
    - name: List installed .NET tools
      run: dotnet tool list --global
      
  # Job 3: Build, Test, and Run SonarQube Analysis
  build_and_analyze:
    runs-on: windows-latest
    needs: architecture_tests  # Ensure dependencies are installed first
    
    steps:
    - name: Install SonarScanner
      run: |
        dotnet tool install --global dotnet-sonarscanner

    - name: Install Coverlet Console Tool
      run: |
        dotnet tool install --global coverlet.console

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Path }}

    - name: Begin SonarQube analysis
      run: |
        dotnet sonarscanner begin /k="sqs-project" /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="coverage.xml"

    - name: Build the solution
      run: dotnet build ${{ env.Solution_Path }} --no-incremental --no-restore

    - name: Run tests and collect code coverage
      run: |
        dotnet tool run coverlet ${{ env.Unit_Tests_Project_Path }}/bin/Debug/net9.0/UrlShortener.UnitTests.dll \
          --target "dotnet" \
          --targetargs "test --no-build" \
          -f opencover \
          -o coverage.xml

    - name: End SonarQube analysis
      run: |
        dotnet sonarscanner end /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}"
